library(plyr)
library(dplyr)
byhi <- byhi %>%
group_by(desig)%>%
mutate(tot.hi=length(desig),
seq.hi=1:length(desig))
byhi <- byhi %>%
plyr::group_by(desig)%>%
plyr::mutate(tot.hi=length(desig),
seq.hi=1:length(desig))
byhi <- byhi %>%
dplyr::group_by(desig)%>%
dplyr::mutate(tot.hi=length(desig),
seq.hi=1:length(desig))
View(byhi)
byhi <- byhi %>%
dplyr::group_by(desig)%>%
dplyr::arrange(desig)%>%
dplyr::mutate(tot.hi=length(desig),
seq.hi=1:length(desig))
View(byhi)
byhi.1 <- read.csv("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201802-201809/BYam/BYam HI FD all results.csv")
byhi.2 <- read.csv("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201809-201902/BYam/BYam HI FD all results.csv")
byhi <- rbind.fill(byhi.1,byhi.2)
byhi <- rbind.fill(byhi.1,byhi.2)
head(byhi)
sum(duplicated(byhi$desig))
byhi <- byhi %>%
dplyr::group_by(desig)%>%
dplyr::arrange(desig)%>%
dplyr::mutate(tot.hi=length(desig),
seq.hi=1:length(desig))
View(byhi)
byhi.1 <- read.csv("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201802-201809/BYam/BYam HI FD all results - common names.csv")
byhi.2 <- read.csv("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201809-201902/BYam/BYam HI FD all results.csv")
byhi <- rbind.fill(byhi.1,byhi.2)
head(byhi)
# source("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201802-201809/summarise_serol.R")
h1hi.1 <- read.csv("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201802-201809/H1/H1 HI summary - common names.csv")
# source("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201802-201809/summarise_serol.R")
h1hi.1 <- read.csv("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201802-201809/H1/H1 HI FD all results - common names.csv")
h1hi.2 <- read.csv("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201809-201902/H1/H1 HI summary.csv")
h3hi.1 <- read.csv("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201802-201809/H3/HI/HI summary - common names.csv")
h3hi.1 <- read.csv("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201802-201809/H3/HI/H3 HI FD all results - common names.csv")
h3hi.2 <- read.csv("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201809-201902/H3/HI/HI summary.csv")
bvhi.1 <- read.csv("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201802-201809/BVic/BVic HI summary - common names.csv")
bvhi.1 <- read.csv("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201802-201809/BVic/BVic HI FD all results - common names.csv")
h1hi.2 <- read.csv("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201809-201902/H1/H1 HI FD all results.csv")
h3hi.1 <- read.csv("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201802-201809/H3/HI/H3 HI FD all results - common names.csv")
h3hi.2 <- read.csv("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201809-201902/H3/HI/H3 HI FD all results.csv")
bvhi.1 <- read.csv("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201802-201809/BVic/BVic HI FD all results - common names.csv")
bvhi.1 <- read.csv("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201802-201809/BVic/BVic HI FD all results - common names.csv")
bvhi.2 <- read.csv("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201809-201902/BVic/BVic HI FD all results.csv")
byhi.1 <- read.csv("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201802-201809/BYam/BYam HI FD all results - common names.csv")
byhi.2 <- read.csv("//vidrlwhoflu/Shared/WHOFLU/serology/Fold differences/201809-201902/BYam/BYam HI FD all results.csv")
byhi <- rbind.fill(byhi.1,byhi.2)
head(byhi)
sum(duplicated(byhi$desig))
byhi <- byhi %>%
dplyr::group_by(desig)%>%
dplyr::arrange(desig)%>%
dplyr::mutate(tot.hi=length(desig),
seq.hi=1:length(desig))
View(byhi)
byhi <- rbind.fill(byhi.1,byhi.2)
sum(duplicated(byhi))
byhi <- !duplicated(byhi)
head(byhi)
byhi <- rbind.fill(byhi.1,byhi.2)
byhi <- subset(byhi, !duplicated(byhi))
byhi <- rbind.fill(byhi.1,byhi.2)
byhi <- subset(byhi, !duplicated(byhi))
sum(duplicated(byhi$desig))
byhi <- byhi %>%
dplyr::group_by(desig)%>%
dplyr::arrange(desig)%>%
dplyr::mutate(tot.hi=length(desig),
seq.hi=1:length(desig))
print(subset(byhi, tot.hi>1))
View(byhi)
# get substitutions
subs <- read.csv(("//vidrlwhoflu/Shared/WHOFLU/Group/Epidemiology/WHO CC DB/data/substitutions_new.csv"))
subs
View(subs)
# get substitutions
subs <- read.csv(("//vidrlwhoflu/Shared/WHOFLU/Group/Epidemiology/WHO CC DB/data/substitutions_new.csv"))
source('//vidrlwhoflu/Shared/WHOFLU/Group/Epidemiology/WHO CC DB/syntax/R/get_subs_newdatabase.R', echo=TRUE)
source('//vidrlwhoflu/users/sullivsh/My Documents/Grants/HCW cohort/Sample size/Sample size and power - for Kanta.R')
install.packages("TrialSize")
source('//vidrlwhoflu/users/sullivsh/My Documents/Grants/HCW cohort/Sample size/Sample size and power - for Kanta.R')
# ar.pcr.dp <- c(0.0516,0.1077)  #actual values from Kuster
triaar.pcr.dp <- c(0.015,0.03)  #actual values from Kuster
ar.pcr.tr <- seq(ar.pcr.dp[1],ar.pcr.dp[2],((ar.pcr.dp[2]-ar.pcr.dp[1])/3))  #imputed values fom Kuster
ar.pcr.tr
ar.pcr.tr <- seq(ar.pcr.dp[1],ar.pcr.dp[2],((ar.pcr.dp[2]-ar.pcr.dp[1])/3))  #imputed values fom Kuster
source('//vidrlwhoflu/users/sullivsh/My Documents/Grants/HCW cohort/Sample size/Sample size and power - for Kanta.R')
# ar.pcr.dp <- c(0.0516,0.1077)  #actual values from Kuster
ar.pcr.dp <- c(0.015,0.03)  #actual values from Kuster
ar.pcr.tr <- seq(ar.pcr.dp[1],ar.pcr.dp[2],((ar.pcr.dp[2]-ar.pcr.dp[1])/3))  #imputed values fom Kuster
prop.pcr.dp <- power.prop.test(p1 = ar.pcr.dp[1], p2 = ar.pcr.dp[2], power = .80)
prop.pcr.tr <- Cochran.Armitage.Trend(alpha=0.05,beta=0.2,pi=ar.pcr.tr,di=di,ni=ni,delta=1)
pcr.dp <- attr(prop.pcr.dp$n,prop.pcr.tr[1])
hcw.dp
waa.dp
pcr.dp
ar.pcr.dp
prop.pcr.dp
source('//vidrlwhoflu/users/sullivsh/My Documents/Grants/HCW cohort/Sample size/Sample size and power - for Kanta.R')
source('//vidrlwhoflu/users/sullivsh/My Documents/Grants/HCW cohort/Sample size/Sample size and power - for Kanta.R')
ar.pcr.dp <- c(0.0516,0.1077)  #actual values from Kuster
ar.pcr.tr <- seq(ar.pcr.dp[1],ar.pcr.dp[2],((ar.pcr.dp[2]-ar.pcr.dp[1])/3))  #imputed values fom Kuster
prop.pcr.dp <- power.prop.test(p1 = ar.pcr.dp[1], p2 = ar.pcr.dp[2], power = .80)
prop.pcr.tr <- Cochran.Armitage.Trend(alpha=0.05,beta=0.2,pi=ar.pcr.tr,di=di,ni=ni,delta=1)
pcr.dp <- attr(prop.pcr.dp$n,prop.pcr.tr[1])
hcw.dp
waa.dp
pcr.dp
prop.pcr.dp
# ar.pcr.dp <- c(0.0516,0.1077)  #actual values from Kuster
ar.pcr.dp <- c(0.015,0.03)  #actual values from Kuster
ar.pcr.tr <- seq(ar.pcr.dp[1],ar.pcr.dp[2],((ar.pcr.dp[2]-ar.pcr.dp[1])/3))  #imputed values fom Kuster
prop.pcr.dp <- power.prop.test(p1 = ar.pcr.dp[1], p2 = ar.pcr.dp[2], power = .80)
prop.pcr.tr <- Cochran.Armitage.Trend(alpha=0.05,beta=0.2,pi=ar.pcr.tr,di=di,ni=ni,delta=1)
pcr.dp <- attr(prop.pcr.dp$n,prop.pcr.tr[1])
pcr.dp
prop.pcr.dp
prop.pcr.tr
prop.pcr.dp$n
prop.pcr.tr[1]
pcr.dp <- attr(prop.pcr.dp$n,prop.pcr.tr[1])
attr(prop.pcr.dp$n,prop.pcr.tr[1])
pcr.dp
n1
source('//vidrlwhoflu/users/sullivsh/My Documents/Grants/HCW cohort/Sample size/Sample size and power - for Kanta.R')
hcw.dp
waa.dp
pcr.dp
0.015*2101
0.03*2101
20/700
*2101
02857143*2101
.02857143*2101
2101*2
4202+1891+1702+1534
ar.pcr.dp <- c(0.015,0.06)  #actual values from Kuster
ar.pcr.tr <- seq(ar.pcr.dp[1],ar.pcr.dp[2],((ar.pcr.dp[2]-ar.pcr.dp[1])/3))  #imputed values fom Kuster
prop.pcr.dp <- power.prop.test(p1 = ar.pcr.dp[1], p2 = ar.pcr.dp[2], power = .80)
prop.pcr.tr <- Cochran.Armitage.Trend(alpha=0.05,beta=0.2,pi=ar.pcr.tr,di=di,ni=ni,delta=1)
pcr.dp <- attr(prop.pcr.dp$n,prop.pcr.tr[1])
hcw.dp
waa.dp
pcr.dp
pcr.dp
ar.pcr.dp <- c(0.015,0.045)  #actual values from Kuster
ar.pcr.tr <- seq(ar.pcr.dp[1],ar.pcr.dp[2],((ar.pcr.dp[2]-ar.pcr.dp[1])/3))  #imputed values fom Kuster
prop.pcr.dp <- power.prop.test(p1 = ar.pcr.dp[1], p2 = ar.pcr.dp[2], power = .80)
prop.pcr.tr <- Cochran.Armitage.Trend(alpha=0.05,beta=0.2,pi=ar.pcr.tr,di=di,ni=ni,delta=1)
pcr.dp <- attr(prop.pcr.dp$n,prop.pcr.tr[1])
hcw.dp
waa.dp
pcr.dp
dat <- read.csv("//vidrlwhoflu/Shared/WHOFLU/Group/Reports/WHO February/WHO February 2019/Main meeting/FINAL_PDF/Trees/aadiffs.csv")
library(xtable)
new.dat <- xtable(dat)
new.dat
dat <- read.csv("//vidrlwhoflu/Shared/WHOFLU/Group/Reports/WHO February/WHO February 2019/Main meeting/FINAL_PDF/Epidemiology/typesubtype.csv.csv")
dat <- read.csv("//vidrlwhoflu/Shared/WHOFLU/Group/Reports/WHO February/WHO February 2019/Main meeting/FINAL_PDF/Epidemiology/typesubtype.csv")
xtable(dat)
xtable(dat, include.rownames=F)
exp(2)
e(44.7261482)
exp(44.7261482)
exp(2)
#--------------------------------------------------------------------------------------
# get the WHOCC data - this is in the master file because you only want to do it once
load("//vidrlwhoflu/Shared/WHOFLU/Group/Epidemiology/WHO CC DB/data/comb_data_R.Rdata")
load("//vidrlwhoflu/Shared/WHOFLU/Group/Epidemiology/WHO CC DB/data/comb_data_R.Rdata")
wa <- subset(whocc.data, state %in% c("NT","WA") &  samp.date >= as.Date("2018-09-01"))
with(wa, table(sender,samp.month,state))
with(wa, table(origin))
with(wa, table(origin, sender))
wa <- subset(wa, origin %in% c("810","820","822","830","832","835","850","860","880","0822","0852 ROBINSON RIVER","DARWIN"))
whocc <- subset(whocc.data, state=="NT" & samp.date >= as.Date("2018-09-01"))
whocc <- rbind(whocc, wa)
with(whocc, table(samp.month, samp.year))
write.table(subset(whocc, select=c(send.sid, desig, sender, Vacc.Status, sex, dob, origin, samp.date,
rec.date, condition, type, subtype, lineage, cc.date, cc.rslt,
hi.date, hi.rslt, pcr.rslt, seq.rslt.HA.1, clade),
file="//vidrlwhoflu/Shared/WHOFLU/Group/Epidemiology/WHO CC DB/data/darwinoutbreak.csv", sep=","))
write.table(subset(whocc, select=c(send.sid, desig, sender, Vacc.Status, sex, dob, origin, samp.date,
rec.date, condition, type, subtype, lineage, cc.date, cc.rslt,
hi.date, hi.rslt, pcr.rslt, seq.rslt.HA.1, clade)),
file="//vidrlwhoflu/Shared/WHOFLU/Group/Epidemiology/WHO CC DB/data/darwinoutbreak.csv", sep=",")
write.table(subset(whocc, select=c(send.sid, desig, sender, Vacc.Status, sex, dob, origin, samp.date,
rec.date, condition, type, subtype, lineage, cc.date, cc.rslt,
hi.date, hi.rslt, pcr.rslt, seq.rslt.HA.1, clade)),
file="//vidrlwhoflu/Shared/WHOFLU/Group/Epidemiology/WHO CC DB/data/darwinoutbreak.csv", sep=",", rownames=F)
write.table(subset(whocc, select=c(send.sid, desig, sender, Vacc.Status, sex, dob, origin, samp.date,
rec.date, condition, type, subtype, lineage, cc.date, cc.rslt,
hi.date, hi.rslt, pcr.rslt, seq.rslt.HA.1, clade)),
file="//vidrlwhoflu/Shared/WHOFLU/Group/Epidemiology/WHO CC DB/data/darwinoutbreak.csv", sep=",", row.names=F)
con <- odbcConnectAccess("Aspren MIS Commonwealth Snapshot.accdb")
# --------------------------------------------------
# Packages to install
# --------------------------------------------------
# install.packages("RODBC")
# install.packages("ISOweek")
require(RODBC)
require(ggplot2)
require(ISOweek)
# --------------------------------------------------
# import data
# --------------------------------------------------
# establish connection with the database
myConn <-odbcDriverConnect("Provider=Microsoft.ACE.OLEDB.12.0;
Data Source=Aspren MIS Commonwealth Snapshot.accdb;
Persist Security Info=False;")
con <- odbcConnectAccess("Aspren MIS Commonwealth Snapshot.accdb")
con <- odbcConnectAccess("AsprenMIS_Commonwealth.accdb")
con <- odbcConnectAccess2007("AsprenMIS_Commonwealth.accdb")
source('//vidrlwhoflu/Shared/WHOFLU/Group/Epidemiology/Surveillance/2019/comb_virol_plots.R')
h1cl.data <- read.table(paste0(path,"h1clade.txt"))
h1cl.data
str(h1cl.data)
h3cl.plot <-
ggplot(subset(aus1819, tsbt=="A H3" & !is.na(clade.1)),
aes(samp.date, stat(count), fill = clade.1)) +
geom_density(position = "fill",size=0) +
ylab("Density") +
scale_fill_brewer(palette="Greens", name='H3 clades') +
scale_x_date(labels = date_format("%b %y"),
breaks = date_breaks("1 month")) +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
egg::ggarrange(tsbt.bar, h1cl.plot, h3cl.plot, ncol=1, labels=c("A","B","C"))
h1cl.data$samp.date <- as.Date(as.character(h1cl.data$V1),format="%d-%m-%Y")
str(h1cl.data)
tsbt.dens <-
ggplot(subset(aus1819, tsbt %in% c("A H1PDM09","A H3","B VIC", "B YAM")),
aes(samp.date, stat(count), fill = tsbt)) +
geom_density(position = "stack") +
scale_fill_brewer(palette="Pastel1", name='Subtype or lineage') +
ylab("Density") +
theme_bw() +
scale_x_date(labels = date_format("%b %y"),
breaks = date_breaks("1 month")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
h1cl.plot.2 <-
ggplot(subset(h1cl.data, tsbt=="A H1PDM09" & !is.na(clade.1)),
aes(samp.date, stat(count), fill = clade.1)) +
geom_density(position = "fill", size=0) +
scale_fill_brewer(palette="Blues", name='H1 clades') +
ylab("Density") +
scale_x_date(labels = date_format("%b %y"),
breaks = date_breaks("1 month")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
h1cl.plot.2 <-
ggplot(h1cl.data, aes(samp.date, stat(count), fill = clade.1)) +
geom_density(position = "fill", size=0) +
scale_fill_brewer(palette="Blues", name='H1 clades') +
ylab("Density") +
scale_x_date(labels = date_format("%b %y"),
breaks = date_breaks("1 month")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
egg::ggarrange(tsbt.bar, tsbt.dens, h1cl.plot, h1cl.plot.2, h3cl.plot, ncol=1, labels=c("A","B","C"))
h1cl.plot.2 <-
ggplot(h1cl.data, aes(samp.date, stat(count), fill = V3)) +
geom_density(position = "fill", size=0) +
scale_fill_brewer(palette="Blues", name='H1 clades') +
ylab("Density") +
scale_x_date(labels = date_format("%b %y"),
breaks = date_breaks("1 month")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
h1cl.plot.2
egg::ggarrange(tsbt.bar, tsbt.dens, h1cl.plot, h1cl.plot.2, h3cl.plot, ncol=1, labels=c("A","B","C"))
egg::ggarrange(tsbt.bar, h1cl.plot.2, h3cl.plot, ncol=1, labels=c("A","B","C"))
virolplot <-
egg::ggarrange(tsbt.dens, h1cl.plot.2, h3cl.plot, ncol=1, labels=c("A","B","C"))
h3cl.plot <-
ggplot(subset(aus1819, tsbt=="A H3" & !is.na(clade.1)),
aes(samp.date, stat(count), fill = clade.1)) +
geom_density(position = "fill",size=0) +
ylab("Density") + xlab("Collection date")
virolplot <-
egg::ggarrange(tsbt.dens, h1cl.plot.2, h3cl.plot, ncol=1, labels=c("A","B","C"))
h3cl.plot <-
ggplot(subset(aus1819, tsbt=="A H3" & !is.na(clade.1)),
aes(samp.date, stat(count), fill = clade.1)) +
geom_density(position = "fill",size=0) +
ylab("Density") + xlab("Collection date") +
scale_fill_brewer(palette="Greens", name='H3 clades') +
scale_x_date(labels = date_format("%b %y"),
breaks = date_breaks("1 month")) +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
virolplot <-
egg::ggarrange(tsbt.dens, h1cl.plot.2, h3cl.plot, ncol=1, labels=c("A","B","C"))
ggsave(paste0(path,"virolplot.pdf"), plot=virolplot, width=8, height=6)
ggsave(paste0(path,"virolplot.png"), plot=virolplot, width=8, height=6)
tsbt.dens <-
ggplot(subset(aus1819, tsbt %in% c("A H1PDM09","A H3","B VIC", "B YAM")),
aes(samp.date, stat(count), fill = tsbt, size=0)) +
geom_density(position = "stack") +
scale_fill_brewer(palette="Pastel1", name='Subtype or lineage') +
ylab("Density") +
theme_bw() +
scale_x_date(labels = date_format("%b %y"),
breaks = date_breaks("1 month")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
virolplot <-
egg::ggarrange(tsbt.dens, h1cl.plot.2, h3cl.plot, ncol=1, labels=c("A","B","C"))
ggsave(paste0(path,"virolplot.pdf"), plot=virolplot, width=8, height=6)
tsbt.dens <-
ggplot(subset(aus1819, tsbt %in% c("A H1PDM09","A H3","B VIC", "B YAM")),
aes(samp.date, stat(count), fill = tsbt)) +
geom_density(position = "stack", size=0) +
scale_fill_brewer(palette="Pastel1", name='Subtype or lineage') +
ylab("Density") +
theme_bw() +
scale_x_date(labels = date_format("%b %y"),
breaks = date_breaks("1 month")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
virolplot <-
egg::ggarrange(tsbt.dens, h1cl.plot.2, h3cl.plot, ncol=1, labels=c("A","B","C"))
virolplot <-
egg::ggarrange(tsbt.dens, h1cl.plot.2, h3cl.plot, ncol=1, labels=c("A","B","C"))
ggsave(paste0(path,"virolplot.pdf"), plot=virolplot, width=8, height=6)
virolplot <-
egg::ggarrange(tsbt.bar, h1cl.plot.2, h3cl.plot, ncol=1, labels=c("A","B","C"))
ggsave(paste0(path,"virolplot.png"), plot=virolplot, width=8, height=6)
tsbt.dens <-
ggplot(subset(aus1819, tsbt %in% c("A H1PDM09","A H3","B VIC", "B YAM")),
aes(samp.date, stat(count), fill = tsbt)) +
geom_density(position = "fill", size=0) +
scale_fill_brewer(palette="Pastel1", name='Subtype or lineage') +
ylab("Density") +
theme_bw() +
scale_x_date(labels = date_format("%b %y"),
breaks = date_breaks("1 month")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
egg::ggarrange(tsbt.bar, tsbt.dens, h1cl.plot, h1cl.plot.2, h3cl.plot, ncol=1, labels=c("A","B","C"))
virolplot <-
egg::ggarrange(tsbt.bar, h1cl.plot.2, h3cl.plot, ncol=1, labels=c("A","B","C"))
virolplot <-
egg::ggarrange(tsbt.dens, h1cl.plot.2, h3cl.plot, ncol=1, labels=c("A","B","C"))
head(colors())
log2(20)+0.5
whocc.dir <- "//vidrlwhoflu/Shared/WHOFLU/Group/Epidemiology/WHO CC DB/data/"
load(paste0(whocc.dir,"comb_data_R.RData"))
attach(whocc.data)
table(sender)
detach(whocc.data)
aus19 <- subset(whocc.data, samp.year==2019)
aus19 <- subset(whocc.data, samp.year==2019 & sender.country=="Australia")
table(sender)
attach(aus19)
table(sender)
table(sender,cc.rslt)
aus19 <- subset(whocc.data, samp.year==2019 & sender %in% c("VIC, RCH MOLECULAR MICROBIOLOGY DEPT. (BIO21)","VIC, ROYAL CHILDREN'S HOSPITAL"))
table(cc.rslt)
prop.table(cc.rslt)
prop.table(table(cc.rslt))
prop.table(table(sender,cc.rslt))
prop.table(table(droplevels(sender),cc.rslt))
table(sender)
detach(aus19)
rch <- subset(whocc.data, samp.year==2019 & sender %in% c("VIC, RCH MOLECULAR MICROBIOLOGY DEPT. (BIO21)","VIC, ROYAL CHILDREN'S HOSPITAL"))
attach(rch)
table(sender)
table(sender,cc.rslt)
table(cc.rslt,sender)
prop.table(table(cc.rslt,sender),2)
detach(rch)
rch <- subset(whocc.data, samp.year %in% c(2018,2019) & sender %in% c("VIC, RCH MOLECULAR MICROBIOLOGY DEPT. (BIO21)","VIC, ROYAL CHILDREN'S HOSPITAL"))
prop.table(table(rch$cc.rslt,rch$samp.year),2)
prop.table(with(subset(rch, table(cc.rslt,samp.year)),2))
prop.table(with(subset(rch), table(cc.rslt,samp.year)),2))
prop.table(with(subset(rch), table(cc.rslt,samp.year)),2)
rch <- subset(whocc.data, samp.year %in% c(2019) & sender %in% c("VIC, RCH MOLECULAR MICROBIOLOGY DEPT. (BIO21)","VIC, ROYAL CHILDREN'S HOSPITAL"))
prop.table(with(subset(rch), table(cc.rslt,samp.year)),2)
prop.table(with(subset(rch), table(cc.rslt,sender)),2)
# ====================================================================
# Set working directory
setwd(getwd())
getwd
# plot functions
source("ve-plot-functions.R")
getwd()
setwd(Sys.getenv("PWD"))
Sys.getenv()
source('//vidrlwhoflu/Shared/WHOFLU/Group/Epidemiology/VE/GIVE/2019-Sep/SH-VE paper/plots/nz-ili-plots.R')
# ----------------------------------------------------------------------------
# SUBJECT: Interim Southern Hemisphere VE paper - surveillance data plots
# AUTHOR: Sheena Sullivan
# DATE: 23/8/2019
# -----------------------------------------------------------------------------
setwd("//vidrlwhoflu/Shared/WHOFLU/Group/Epidemiology/VE/GIVE/2019-Sep/SH-VE paper/plots/SH-2019-paper")
library(mem)
library(plyr)
library(dplyr)
# ===================================================
# colours
rd <- rgb(1, 0, 0,0.4)
gn <- rgb(0, 1, 0,0.4)
bl <- rgb(0, 0, 1,0.4)
pp <- rgb(1, 0, 1,0.4)
gy1 <- rgb(0, 0, 0,0.05)
gy2 <- rgb(0, 0, 0,0.2)
# -----------------------------------------------------------------------------
# Functions
# -----------------------------------------------------------------------------
# plot the MEM curves
plotmem <- function(dat,y.lab="Weekly rate",this.year=2019,n.years=6, extraheight=0){  #not used in loop at end, but useful for plotting each jurisdiction's data
this.year.col <- grep(this.year,colnames(dat))  #identifies this year's data - don't want this in the mem
end.col <- this.year.col-1             #identifies the last column to be used by mem
start.col <- this.year.col-n.years     #identifies the first column to be used by mem
n.row <- nrow(dat)  #finds the number of rows of the data for the X axis
dat <- dat[order(dat$week),]
epi<-memmodel(dat[start.col:end.col])  #aligns the data for average of 5 years
intensity <- memintensity(epi)   #intensity thresholds
thresholds <- as.data.frame(intensity$intensity.thresholds)
summary(epi)
mean <- as.data.frame(epi$typ.curve)
mean$week <- as.numeric(dat$week)
mean$thisyear <- dat[,this.year.col]
# mean$V2[is.na(mean$V1) & is.na(mean$V3) & mean$V2 > lag(mean$V2)] <- NA
ymax <- round_any(max(mean[,c("V2","thisyear")],na.rm=TRUE),5,ceiling)  #reduce size if planning to plot highest thresholds
if(thresholds[3]>ymax){
ymax <- as.numeric(thresholds[3])
}
# plot the mean and current year's data
par(xpd=F)
plot(NA, ylim=c(0,ymax), xlim=c(1,53), axes=F,
ylab = paste(y.lab), xlab="")
axis(1, at=seq(1,53,2),cex.axis=1)
axis(2, las=1, cex.axis=1)
lines(mean$week,mean$V2, lty=1, lwd=2, col="orange")  #mean of past X years
lines(mean$week,mean$thisyear, lty=2, lwd=2, col="brown")  #this year's data
# baseline annotations
points(min(row.names(mean)[mean$thisyear>=epi$epidemic.thresholds[1]],na.rm=T),
epi$epidemic.thresholds[1],
col="red",pch=1)
points(max(row.names(mean)[mean$thisyear>=epi$epidemic.thresholds[2]],na.rm=T)+1,
epi$epidemic.thresholds[2],
col="green",pch=1)
# intensity annotations
abline(h=thresholds[2],col=3,lty=2)
text(x=46,y=thresholds[2]+extraheight,"Medium (40%)", cex=0.8)
abline(h=thresholds[3],col=3,lty=2)
text(x=46,y=thresholds[3]+extraheight,"High (90%)", cex=0.8)
if(thresholds[4]<ymax){
abline(h=thresholds[4],col=3,lty=2)
text(x=46,y=thresholds[4]+extraheight,"Very high (97.5%)", cex=0.8)
}
}
# plotmem(aust.ili)
